version: 2.1

step-library:
  - &restore-cache
      restore_cache:
        keys:
          - carthage-cache-mbdirections-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cartfile.resolved" }}
          - carthage-cache-mbdirections-v1- # used if checksum fails

  - &save-cache
      save_cache:
        key: carthage-cache-mbdirections-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cartfile.resolved" }}
        paths:
          - Carthage

  - &prepare
      run:
        name: Prepare
        command: |
          if [ $(carthage outdated | grep -cF "latest Carthage version") -eq 0 ]; then brew update && brew upgrade carthage || true; fi
          echo "foo" > ~/.mapbox

  - &publish-codecov
      run:
        name: Publish Code Coverage data
        command: bash <(curl -s https://codecov.io/bash)

jobs:
  build-job:
    parameters:
      xcode:
        type: string
      device:
        type: string
        default: "iPhone 6 Plus"
      iOS:
        type: string
        default: "12.1"
      watchOS:
        type: string
        default: "5.0"
      tvOS:
        type: string
        default: "12.0"
      test:
        type: boolean
        default: true
      codecoverage:
        type: boolean
        default: false
      install_legacy_sim:
        type: boolean
        default: false
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - *prepare
      - *restore-cache
      - when:
          condition: << parameters.install_legacy_sim >>
          steps:
            - run: xcversion simulators --install="iOS << parameters.iOS >>"
      - run:
          name: iOS
          command: |
            carthage bootstrap --platform ios --cache-builds --no-use-binaries --new-resolver
            xcodebuild -sdk iphonesimulator -project MapboxDirections.xcodeproj -scheme 'MapboxDirections iOS' -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>' clean build <<# parameters.test >>test <</ parameters.test >> <<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >>  
      - run:
          name: tvOS
          command: |
            carthage bootstrap --platform tvos --cache-builds --no-use-binaries --new-resolver
            xcodebuild -project MapboxDirections.xcodeproj -scheme 'MapboxDirections tvOS' -destination 'platform=tvOS Simulator,name=Apple TV 4K (at 1080p),OS=<< parameters.tvOS >>' clean build <<# parameters.test >>test <</ parameters.test >> <<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >>
      - run:
          name: macOS
          command: |
            carthage bootstrap --platform macos --cache-builds --no-use-binaries --new-resolver
            xcodebuild -project MapboxDirections.xcodeproj -scheme 'MapboxDirections Mac' clean build<<# parameters.test >> test <</ parameters.test >><<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >>
      - run:
          name: watchOS
          command: |
            carthage bootstrap --platform watchos --cache-builds --no-use-binaries --new-resolver
            xcodebuild -project MapboxDirections.xcodeproj -scheme 'MapboxDirections watchOS' -destination 'platform=watchOS Simulator,name=Apple Watch Series 3 - 42mm,OS=<< parameters.watchOS >>' clean build
      - when:
          condition: << parameters.codecoverage >>
          steps:
            - run: bash <(curl -s https://codecov.io/bash)
      - *save-cache           

workflows:
  workflow:
    jobs:
      - build-job:
          name: "Xcode 10.2 iOS 12.2"
          xcode: "10.2.0"
          iOS: "12.2"
          tvOS: "12.2"
          watchOS: "5.2"
      - build-job:
          name: "Xcode 10.1 iOS 12.1"
          xcode: "10.1.0"
          iOS: "12.1"
          tvOS: "12.1"
      - build-job:
          name: "Xcode 9.4 iOS 9.3"
          xcode: "9.4.1"
          iOS: "9.3"
          install_legacy_sim: true
