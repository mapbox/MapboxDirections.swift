version: 2.1

commands:
    install-mapbox-token:
         steps:
             - run:
                 name: Install Mapbox Access Token
                 command: echo "foo" > ~/.mapbox

    restore-cache:
         steps:
             - restore_cache:
                 name: Restore cache
                 keys:
                    - carthage-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cartfile.resolved" }}

    save-cache:
        steps:
             - save_cache:
                 key: carthage-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cartfile.resolved" }}
                 paths:
                     - Carthage
                     - Cartfile.resolved

    install-carthage:
        steps:
            - run:
                name: Install Carthage
                command: |
                    curl -OL "https://github.com/Carthage/Carthage/releases/download/0.34.0/Carthage.pkg"
                    sudo installer -pkg Carthage.pkg -target /

    publish-codecov:
        steps:
            - run:
                name: Publish Code Coverage
                command: bash <(curl -s https://codecov.io/bash)

jobs:
  spm-linux-job:
    docker:
      - image: swift:5.3
    steps:
      - checkout
      - run: swift build
      - run: swift test

  spm-job:
    parameters:
      xcode:
        type: string
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run: swift build

  build-job:
    parameters:
      xcode:
        type: string
      device:
        type: string
        default: "iPhone 8 Plus"
      iOS:
        type: string
        default: "12.1"
      watchOS:
        type: string
        default: "5.0"
      tvOS:
        type: string
        default: "12.0"
      test:
        type: boolean
        default: true
      codecoverage:
        type: boolean
        default: false
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - install-mapbox-token
      - install-carthage
      - restore-cache
      - run:
          name: Install prerequisites
          command: |
            if [ $(xcversion simulators | grep -cF "iOS << parameters.iOS >> Simulator (installed)") -eq 0 ]; then xcversion simulators --install="iOS << parameters.iOS >>" || true; fi
      - run:
          name: Dependencies
          command: |
            ./scripts/wcarthage.sh bootstrap --platform ios --cache-builds --configuration Debug --no-use-binaries
            ./scripts/wcarthage.sh bootstrap --platform tvos --cache-builds --configuration Debug --no-use-binaries
            ./scripts/wcarthage.sh bootstrap --platform macos --cache-builds --configuration Debug --no-use-binaries
            ./scripts/wcarthage.sh bootstrap --platform watchos --cache-builds --configuration Debug --no-use-binaries
      - run:
          name: iOS
          command: xcodebuild -sdk iphonesimulator -project MapboxDirections.xcodeproj -scheme 'MapboxDirections iOS' -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>' clean build <<# parameters.test >>test<</ parameters.test >><<# parameters.codecoverage >> -enableCodeCoverage "YES"<</ parameters.codecoverage >>
      - when:
          condition: << parameters.codecoverage >>
          steps:
            - publish-codecov
      - run:
          name: tvOS
          command: xcodebuild -project MapboxDirections.xcodeproj -scheme 'MapboxDirections tvOS' -destination 'platform=tvOS Simulator,name=Apple TV 4K (at 1080p),OS=<< parameters.tvOS >>' clean build <<# parameters.test >>test <</ parameters.test >> <<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >>
      - when:
          condition: << parameters.codecoverage >>
          steps:
            - publish-codecov
      - run:
          name: macOS
          command: xcodebuild -project MapboxDirections.xcodeproj -scheme 'MapboxDirections Mac' clean build<<# parameters.test >> test <</ parameters.test >><<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >>
      - run:
          name: watchOS
          command: xcodebuild -project MapboxDirections.xcodeproj -scheme 'MapboxDirections watchOS' -destination 'platform=watchOS Simulator,name=Apple Watch Series 5 - 44mm,OS=<< parameters.watchOS >>' clean build
      - save-cache

workflows:
  workflow:
    jobs:
      - build-job:
          name: "Xcode_12.1"
          xcode: "12.0.0"
          iOS: "14.0"
          tvOS: "14.0"
          watchOS: "7.0"
      - build-job:
          name: "Xcode_11.1"
          xcode: "11.1.0"
          iOS: "13.1"
          tvOS: "13.0"
          watchOS: "6.0"
          codecoverage: true
      - spm-job:
          name: "SPM_build"
          xcode: "12.0.0"
      - spm-linux-job:
          name: "SPM_Ubuntu_build"
